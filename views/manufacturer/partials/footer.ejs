    </div>
  </div>

  <!-- Professional Manufacturer Dashboard Scripts -->
  <script src="/assets/js/bootstrap.bundle.min.js"></script>
  <script src="/js/manufacturer/dashboard-init.js"></script>
  
  <!-- Toast Notification System -->
  <style>
    .toast-container {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 9999;
      display: flex;
      flex-direction: column;
      gap: 12px;
      pointer-events: none;
    }

    .toast {
      min-width: 320px;
      max-width: 480px;
      background: white;
      border-radius: 8px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
      display: flex;
      align-items: center;
      gap: 12px;
      padding: 16px;
      pointer-events: auto;
      animation: slideInRight 0.3s ease-out;
      position: relative;
      overflow: hidden;
    }

    .toast::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 4px;
    }

    .toast.success::before {
      background: var(--success-500);
    }

    .toast.error::before {
      background: var(--error-500);
    }

    .toast.warning::before {
      background: var(--warning-500);
    }

    .toast.info::before {
      background: var(--primary-500);
    }

    .toast-icon {
      font-size: 1.25rem;
      flex-shrink: 0;
    }

    .toast.success .toast-icon {
      color: var(--success-600);
    }

    .toast.error .toast-icon {
      color: var(--error-600);
    }

    .toast.warning .toast-icon {
      color: var(--warning-600);
    }

    .toast.info .toast-icon {
      color: var(--primary-600);
    }

    .toast-content {
      flex: 1;
      font-size: 14px;
      color: var(--text-primary);
      line-height: 1.4;
    }

    .toast-close {
      background: none;
      border: none;
      color: var(--text-muted);
      cursor: pointer;
      padding: 4px;
      border-radius: 4px;
      flex-shrink: 0;
      transition: all 0.2s;
    }

    .toast-close:hover {
      background-color: var(--bg-secondary);
      color: var(--text-secondary);
    }

    @keyframes slideInRight {
      from {
        transform: translateX(100%);
        opacity: 0;
      }
      to {
        transform: translateX(0);
        opacity: 1;
      }
    }

    @keyframes slideOutRight {
      from {
        transform: translateX(0);
        opacity: 1;
      }
      to {
        transform: translateX(100%);
        opacity: 0;
      }
    }

    .toast.removing {
      animation: slideOutRight 0.3s ease-in forwards;
    }

    /* Modal Overlay Styles */
    .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0, 0, 0, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10000;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }

    .modal-overlay:not(.hidden) {
      opacity: 1;
      visibility: visible;
    }

    .modal-container {
      background: var(--bg-elevated);
      border-radius: 12px;
      max-width: 500px;
      width: 90%;
      max-height: 90vh;
      overflow: auto;
      transform: scale(0.9);
      transition: transform 0.3s ease;
    }

    .modal-overlay:not(.hidden) .modal-container {
      transform: scale(1);
    }

    .modal-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: var(--space-5) var(--space-6);
      border-bottom: 1px solid var(--border-light);
    }

    .modal-title {
      font-size: var(--font-size-lg);
      font-weight: 600;
      color: var(--text-primary);
      margin: 0;
      display: flex;
      align-items: center;
      gap: var(--space-2);
    }

    .modal-title i {
      color: var(--primary-600);
    }

    .modal-close {
      width: 32px;
      height: 32px;
      border: none;
      background: var(--bg-secondary);
      color: var(--text-secondary);
      border-radius: 6px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .modal-close:hover {
      background: var(--error-50);
      color: var(--error-600);
    }

    .modal-content {
      padding: var(--space-6);
    }

    .modal-footer {
      display: flex;
      gap: var(--space-3);
      justify-content: flex-end;
      padding: var(--space-5) var(--space-6);
      border-top: 1px solid var(--border-light);
      background: var(--bg-secondary);
    }

    /* Loading States */
    .loading-spinner {
      display: inline-block;
      width: 16px;
      height: 16px;
      border: 2px solid var(--border-light);
      border-radius: 50%;
      border-top: 2px solid var(--primary-500);
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .loading-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(255, 255, 255, 0.8);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
    }

    .loading-content {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: var(--space-3);
      color: var(--text-secondary);
    }

    .loading-spinner-large {
      width: 32px;
      height: 32px;
      border: 3px solid var(--border-light);
      border-radius: 50%;
      border-top: 3px solid var(--primary-500);
      animation: spin 1s linear infinite;
    }

    /* Unsaved Changes Indicator */
    body.has-unsaved-changes::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(90deg, var(--warning-500), var(--warning-600));
      z-index: 9999;
    }

    /* Print Styles */
    @media print {
      .admin-sidebar,
      .admin-header,
      .order-detail-actions,
      .quick-actions-card,
      .modal-overlay {
        display: none !important;
      }

      .admin-main {
        margin-left: 0 !important;
      }

      .order-detail-content {
        box-shadow: none !important;
        border: none !important;
      }

      .info-card {
        break-inside: avoid;
        margin-bottom: var(--space-4);
      }
    }
  </style>

  <!-- Global Variables for Manufacturer Dashboard -->
  <script>
    // Set global debug mode
    window.DEBUG_MODE = "<%= process.env.NODE_ENV !== 'production' %>";
    
    // Manufacturer dashboard configuration
    window.MANUFACTURER_CONFIG = {
      apiBaseUrl: '/api/manufacturer',
      toastTimeout: 5000,
      autoSaveInterval: 30000,
      theme: localStorage.getItem('dashboard-theme') || localStorage.getItem('dashboard-theme') || localStorage.getItem('dashboard-theme') || 'light'
    };
    
    // Global toast notification system
    window.showToast = function(message, type = 'info', duration = 5000) {
      const container = document.getElementById('toast-container');
      if (!container) return;
      
      const toast = document.createElement('div');
      toast.className = `toast ${type}`;
      
      const iconMap = {
        success: 'fas fa-check-circle',
        error: 'fas fa-exclamation-circle',
        warning: 'fas fa-exclamation-triangle',
        info: 'fas fa-info-circle'
      };
      
      toast.innerHTML = `
        <i class="toast-icon ${iconMap[type] || iconMap.info}"></i>
        <span class="toast-content">${message}</span>
        <button class="toast-close" onclick="this.parentElement.remove()">
          <i class="fas fa-times"></i>
        </button>
      `;
      
      container.appendChild(toast);
      
      // Auto remove after duration
      setTimeout(() => {
        if (toast.parentElement) {
          toast.classList.add('removing');
          setTimeout(() => toast.remove(), 300);
        }
      }, duration);
    };
    
    // Initialize manufacturer dashboard
    document.addEventListener('DOMContentLoaded', function() {
      console.log('🏭 Manufacturer Dashboard Initialized');
      
      // Apply saved theme with proper sync
      const savedTheme = window.MANUFACTURER_CONFIG.theme;
      if (savedTheme) {
        document.documentElement.setAttribute('data-theme', savedTheme);
        
        // Sync all theme keys for consistency
        localStorage.setItem('dashboard-theme', savedTheme);
        localStorage.setItem('dashboard-theme', savedTheme);
        localStorage.setItem('dashboard-theme', savedTheme);
      }
      
      // Initialize global components
      if (typeof window.initializeTooltips === 'function') {
        window.initializeTooltips();
      }
      
      if (typeof window.initializeKeyboardShortcuts === 'function') {
        window.initializeKeyboardShortcuts();
      }
      
      // Auto-save functionality
      let autoSaveTimer;
      document.addEventListener('input', function(e) {
        if (e.target.matches('input, textarea, select')) {
          clearTimeout(autoSaveTimer);
          autoSaveTimer = setTimeout(() => {
            const form = e.target.closest('form');
            if (form && form.dataset.autoSave === 'true') {
              // Trigger auto-save
              console.log('Auto-saving form data...');
            }
          }, window.MANUFACTURER_CONFIG.autoSaveInterval);
        }
      });
    });
  </script>
</body>
</html>

